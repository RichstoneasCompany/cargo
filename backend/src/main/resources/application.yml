spring:
  datasource:
    url: jdbc:postgresql://0.0.0.0:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ~
    password: ~
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: localhost
      port: 6379
      password: redis
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: temperatureGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'

application:
  security:
    jwt:
      secret-key: ~
      expiration: 86400000 # a day
      refresh-token:
        expiration: 604800000 # 7 days
logging:
  level:
    org:
      springframework:
          security: DEBUG
twilio:
  account-sid: ~
  auth-token: ~
  trial-number: ~
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
api:
  2gis:
    key: ~
  google:
    key: ~
  yandex:
    key: ~
server:
  servlet:
    session:
      cookie:
        http-only: true
        secure: true